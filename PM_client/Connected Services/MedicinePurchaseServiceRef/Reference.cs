//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PM_client.MedicinePurchaseServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicinePurchase", Namespace="http://schemas.datacontract.org/2004/07/PM_service")]
    [System.SerializableAttribute()]
    public partial class MedicinePurchase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicinePurchaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurchaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicineId {
            get {
                return this.MedicineIdField;
            }
            set {
                if ((this.MedicineIdField.Equals(value) != true)) {
                    this.MedicineIdField = value;
                    this.RaisePropertyChanged("MedicineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicinePurchaseId {
            get {
                return this.MedicinePurchaseIdField;
            }
            set {
                if ((this.MedicinePurchaseIdField.Equals(value) != true)) {
                    this.MedicinePurchaseIdField = value;
                    this.RaisePropertyChanged("MedicinePurchaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurchaseId {
            get {
                return this.PurchaseIdField;
            }
            set {
                if ((this.PurchaseIdField.Equals(value) != true)) {
                    this.PurchaseIdField = value;
                    this.RaisePropertyChanged("PurchaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MedicinePurchaseServiceRef.IMedicinePurchase")]
    public interface IMedicinePurchase {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/AddMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/AddMedicinePurchaseResponse")]
        void AddMedicinePurchase(PM_client.MedicinePurchaseServiceRef.MedicinePurchase m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/AddMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/AddMedicinePurchaseResponse")]
        System.Threading.Tasks.Task AddMedicinePurchaseAsync(PM_client.MedicinePurchaseServiceRef.MedicinePurchase m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchaseResponse")]
        void RemoveMedicinePurchase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchaseResponse")]
        System.Threading.Tasks.Task RemoveMedicinePurchaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/UpdateMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/UpdateMedicinePurchaseResponse")]
        bool UpdateMedicinePurchase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/UpdateMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/UpdateMedicinePurchaseResponse")]
        System.Threading.Tasks.Task<bool> UpdateMedicinePurchaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/GetMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/GetMedicinePurchaseResponse")]
        PM_client.MedicinePurchaseServiceRef.MedicinePurchase GetMedicinePurchase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/GetMedicinePurchase", ReplyAction="http://tempuri.org/IMedicinePurchase/GetMedicinePurchaseResponse")]
        System.Threading.Tasks.Task<PM_client.MedicinePurchaseServiceRef.MedicinePurchase> GetMedicinePurchaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/GetAllMedicinePurchases", ReplyAction="http://tempuri.org/IMedicinePurchase/GetAllMedicinePurchasesResponse")]
        System.Data.DataSet GetAllMedicinePurchases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/GetAllMedicinePurchases", ReplyAction="http://tempuri.org/IMedicinePurchase/GetAllMedicinePurchasesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllMedicinePurchasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/GetMedicinePurchasesByPurchaseId", ReplyAction="http://tempuri.org/IMedicinePurchase/GetMedicinePurchasesByPurchaseIdResponse")]
        System.Data.DataSet GetMedicinePurchasesByPurchaseId(int purchaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/GetMedicinePurchasesByPurchaseId", ReplyAction="http://tempuri.org/IMedicinePurchase/GetMedicinePurchasesByPurchaseIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMedicinePurchasesByPurchaseIdAsync(int purchaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchasesByPurchaseId", ReplyAction="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchasesByPurchaseIdResponse")]
        void RemoveMedicinePurchasesByPurchaseId(int purchaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchasesByPurchaseId", ReplyAction="http://tempuri.org/IMedicinePurchase/RemoveMedicinePurchasesByPurchaseIdResponse")]
        System.Threading.Tasks.Task RemoveMedicinePurchasesByPurchaseIdAsync(int purchaseId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicinePurchaseChannel : PM_client.MedicinePurchaseServiceRef.IMedicinePurchase, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicinePurchaseClient : System.ServiceModel.ClientBase<PM_client.MedicinePurchaseServiceRef.IMedicinePurchase>, PM_client.MedicinePurchaseServiceRef.IMedicinePurchase {
        
        public MedicinePurchaseClient() {
        }
        
        public MedicinePurchaseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicinePurchaseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicinePurchaseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicinePurchaseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddMedicinePurchase(PM_client.MedicinePurchaseServiceRef.MedicinePurchase m) {
            base.Channel.AddMedicinePurchase(m);
        }
        
        public System.Threading.Tasks.Task AddMedicinePurchaseAsync(PM_client.MedicinePurchaseServiceRef.MedicinePurchase m) {
            return base.Channel.AddMedicinePurchaseAsync(m);
        }
        
        public void RemoveMedicinePurchase(int id) {
            base.Channel.RemoveMedicinePurchase(id);
        }
        
        public System.Threading.Tasks.Task RemoveMedicinePurchaseAsync(int id) {
            return base.Channel.RemoveMedicinePurchaseAsync(id);
        }
        
        public bool UpdateMedicinePurchase(int id) {
            return base.Channel.UpdateMedicinePurchase(id);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMedicinePurchaseAsync(int id) {
            return base.Channel.UpdateMedicinePurchaseAsync(id);
        }
        
        public PM_client.MedicinePurchaseServiceRef.MedicinePurchase GetMedicinePurchase(int id) {
            return base.Channel.GetMedicinePurchase(id);
        }
        
        public System.Threading.Tasks.Task<PM_client.MedicinePurchaseServiceRef.MedicinePurchase> GetMedicinePurchaseAsync(int id) {
            return base.Channel.GetMedicinePurchaseAsync(id);
        }
        
        public System.Data.DataSet GetAllMedicinePurchases() {
            return base.Channel.GetAllMedicinePurchases();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllMedicinePurchasesAsync() {
            return base.Channel.GetAllMedicinePurchasesAsync();
        }
        
        public System.Data.DataSet GetMedicinePurchasesByPurchaseId(int purchaseId) {
            return base.Channel.GetMedicinePurchasesByPurchaseId(purchaseId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMedicinePurchasesByPurchaseIdAsync(int purchaseId) {
            return base.Channel.GetMedicinePurchasesByPurchaseIdAsync(purchaseId);
        }
        
        public void RemoveMedicinePurchasesByPurchaseId(int purchaseId) {
            base.Channel.RemoveMedicinePurchasesByPurchaseId(purchaseId);
        }
        
        public System.Threading.Tasks.Task RemoveMedicinePurchasesByPurchaseIdAsync(int purchaseId) {
            return base.Channel.RemoveMedicinePurchasesByPurchaseIdAsync(purchaseId);
        }
    }
}
