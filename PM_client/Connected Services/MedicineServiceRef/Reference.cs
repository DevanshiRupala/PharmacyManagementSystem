//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PM_client.MedicineServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicine", Namespace="http://schemas.datacontract.org/2004/07/PM_service")]
    [System.SerializableAttribute()]
    public partial class Medicine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineDescription {
            get {
                return this.MedicineDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineDescriptionField, value) != true)) {
                    this.MedicineDescriptionField = value;
                    this.RaisePropertyChanged("MedicineDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicineId {
            get {
                return this.MedicineIdField;
            }
            set {
                if ((this.MedicineIdField.Equals(value) != true)) {
                    this.MedicineIdField = value;
                    this.RaisePropertyChanged("MedicineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineName {
            get {
                return this.MedicineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineNameField, value) != true)) {
                    this.MedicineNameField = value;
                    this.RaisePropertyChanged("MedicineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MedicineServiceRef.IMedicine")]
    public interface IMedicine {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/GetMedicines", ReplyAction="http://tempuri.org/IMedicine/GetMedicinesResponse")]
        System.Data.DataSet GetMedicines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/GetMedicines", ReplyAction="http://tempuri.org/IMedicine/GetMedicinesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMedicinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/AddMedicines", ReplyAction="http://tempuri.org/IMedicine/AddMedicinesResponse")]
        void AddMedicines(PM_client.MedicineServiceRef.Medicine m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/AddMedicines", ReplyAction="http://tempuri.org/IMedicine/AddMedicinesResponse")]
        System.Threading.Tasks.Task AddMedicinesAsync(PM_client.MedicineServiceRef.Medicine m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/DeleteMedicine", ReplyAction="http://tempuri.org/IMedicine/DeleteMedicineResponse")]
        void DeleteMedicine(int medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/DeleteMedicine", ReplyAction="http://tempuri.org/IMedicine/DeleteMedicineResponse")]
        System.Threading.Tasks.Task DeleteMedicineAsync(int medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/UpdateMedicine", ReplyAction="http://tempuri.org/IMedicine/UpdateMedicineResponse")]
        void UpdateMedicine(PM_client.MedicineServiceRef.Medicine m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/UpdateMedicine", ReplyAction="http://tempuri.org/IMedicine/UpdateMedicineResponse")]
        System.Threading.Tasks.Task UpdateMedicineAsync(PM_client.MedicineServiceRef.Medicine m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/GetMedicine", ReplyAction="http://tempuri.org/IMedicine/GetMedicineResponse")]
        PM_client.MedicineServiceRef.Medicine GetMedicine(int medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/GetMedicine", ReplyAction="http://tempuri.org/IMedicine/GetMedicineResponse")]
        System.Threading.Tasks.Task<PM_client.MedicineServiceRef.Medicine> GetMedicineAsync(int medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/GetMedicineByName", ReplyAction="http://tempuri.org/IMedicine/GetMedicineByNameResponse")]
        System.Data.DataSet GetMedicineByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicine/GetMedicineByName", ReplyAction="http://tempuri.org/IMedicine/GetMedicineByNameResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMedicineByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicineChannel : PM_client.MedicineServiceRef.IMedicine, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicineClient : System.ServiceModel.ClientBase<PM_client.MedicineServiceRef.IMedicine>, PM_client.MedicineServiceRef.IMedicine {
        
        public MedicineClient() {
        }
        
        public MedicineClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicineClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicineClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicineClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetMedicines() {
            return base.Channel.GetMedicines();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMedicinesAsync() {
            return base.Channel.GetMedicinesAsync();
        }
        
        public void AddMedicines(PM_client.MedicineServiceRef.Medicine m) {
            base.Channel.AddMedicines(m);
        }
        
        public System.Threading.Tasks.Task AddMedicinesAsync(PM_client.MedicineServiceRef.Medicine m) {
            return base.Channel.AddMedicinesAsync(m);
        }
        
        public void DeleteMedicine(int medicineId) {
            base.Channel.DeleteMedicine(medicineId);
        }
        
        public System.Threading.Tasks.Task DeleteMedicineAsync(int medicineId) {
            return base.Channel.DeleteMedicineAsync(medicineId);
        }
        
        public void UpdateMedicine(PM_client.MedicineServiceRef.Medicine m) {
            base.Channel.UpdateMedicine(m);
        }
        
        public System.Threading.Tasks.Task UpdateMedicineAsync(PM_client.MedicineServiceRef.Medicine m) {
            return base.Channel.UpdateMedicineAsync(m);
        }
        
        public PM_client.MedicineServiceRef.Medicine GetMedicine(int medicineId) {
            return base.Channel.GetMedicine(medicineId);
        }
        
        public System.Threading.Tasks.Task<PM_client.MedicineServiceRef.Medicine> GetMedicineAsync(int medicineId) {
            return base.Channel.GetMedicineAsync(medicineId);
        }
        
        public System.Data.DataSet GetMedicineByName(string name) {
            return base.Channel.GetMedicineByName(name);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMedicineByNameAsync(string name) {
            return base.Channel.GetMedicineByNameAsync(name);
        }
    }
}
